// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                    String                     @id @default(auto()) @map("_id") @db.ObjectId
  username              String                     @unique()
  password              String
  userType              UserType                   @default(teamMemeber)
  createdAt             DateTime                   @default(now())
  updatedAt             DateTime                   @default(now()) @updatedAt
  events                GanttEvent[]
  projects              GanttProject[]
  assignedGanttProjects AssignedUserGanttProject[]
}

model GanttProject {
  id            String                     @id @default(auto()) @map("_id") @db.ObjectId
  name          String
  description   String
  userId        String                     @db.ObjectId
  createdBy     User                       @relation(fields: [userId], references: [id])
  createdAt     DateTime                   @default(now())
  updatedAt     DateTime                   @default(now()) @updatedAt
  events        GanttEvent[]
  assignedUsers AssignedUserGanttProject[]
}

model AssignedUserGanttProject {
  id           String       @id @default(auto()) @map("_id") @db.ObjectId
  userId       String       @db.ObjectId
  assignedUser User         @relation(fields: [userId], references: [id])
  projectId    String       @db.ObjectId
  project      GanttProject @relation(fields: [projectId], references: [id])
  createdAt    DateTime     @default(now())
}

model GanttEvent {
  id        String       @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  projectId String       @db.ObjectId
  project   GanttProject @relation(fields: [projectId], references: [id])
  userId    String       @db.ObjectId
  createdBy User         @relation(fields: [userId], references: [id])
  start     DateTime     @default(now())
  end       DateTime     @default(now())
  duration  Int          @default(0)
  status    EventStatus  @default(pending)
  createdAt DateTime     @default(now())
  updatedAt DateTime     @default(now()) @updatedAt
}

enum EventStatus {
  completed
  pending
  inTrack
  inTrouble
  revoked
  needsImmediateAttention
}

enum UserType {
  admin
  teamLeader
  teamMemeber
}
